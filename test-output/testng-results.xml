<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="53" failed="7" total="113" passed="53">
  <reporter-output>
  </reporter-output>
  <suite name="LDP Test Suite" duration-ms="1887" started-at="2019-01-01T20:19:17Z" finished-at="2019-01-01T20:19:19Z">
    <groups>
      <group name="MAY">
        <method signature="CommonContainerTest.testPutToCreate()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutToCreate" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRdfTypeLdpContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRdfTypeLdpContainer" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testServerHonorsSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testServerHonorsSlug" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="NonRDFSourceTest.testPostNonRDFSource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostNonRDFSource" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="NonRDFSourceTest.testPostResourceAndCheckAssociatedResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceAndCheckAssociatedResource" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="NonRDFSourceTest.testPostResourceAndCheckLink()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceAndCheckLink" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="NonRDFSourceTest.testPostResourceAndGetFromContainer()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceAndGetFromContainer" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="NonRDFSourceTest.testPostResourceGetBinary()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceGetBinary" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="NonRDFSourceTest.testPostResourceGetMetadataAndBinary()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceGetMetadataAndBinary" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="RdfSourceTest.testTypeRdfSource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testTypeRdfSource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testTypeRdfSource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testTypeRdfSource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
      </group> <!-- MAY -->
      <group name="MANUAL">
        <method signature="CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testIsHttp11Manual" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testIsHttp11Manual" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testReUseVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictClientInference" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testUseStandardVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testRestrictClientInference" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testUseStandardVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testReUseVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testIsHttp11Manual" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
      </group> <!-- MANUAL -->
      <group name="SHOULD">
        <method signature="CommonContainerTest.testContentTypeHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContentTypeHeader" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testCreateWithoutConstraints()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testCreateWithoutConstraints" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testNoRdfBagSeqOrList()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testNoRdfBagSeqOrList" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testPatchMethod()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPatchMethod" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testPostNoSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostNoSlug" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testPreferContainmentTriples()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPreferContainmentTriples" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRejectPutModifyingContainmentTriples()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRejectPutModifyingContainmentTriples" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRestrictPutReUseUri()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictPutReUseUri" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRestrictUriReUseNoSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictUriReUseNoSlug" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRestrictUriReUseSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictUriReUseSlug" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonResourceTest.testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutRequiresIfMatch" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.test4xxErrorHasResponseBody(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="test4xxErrorHasResponseBody" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testContainsRdfType()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContainsRdfType" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testGetResourceAsTurtleNoAccept()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResourceAsTurtleNoAccept" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testReUseVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testResponsePropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testResponsePropertiesNotPersisted" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testUseStandardVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testUseStandardVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testReUseVocabularies" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testGetResourceAsTurtleNoAccept()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResourceAsTurtleNoAccept" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutRequiresIfMatch" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPutRequiresIfMatch" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.test4xxErrorHasResponseBody(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="test4xxErrorHasResponseBody" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testContainsRdfType()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testContainsRdfType" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testResponsePropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testResponsePropertiesNotPersisted" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
      </group> <!-- SHOULD -->
      <group name="MUST">
        <method signature="CommonContainerTest.testAcceptPostResponseHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testAcceptPostResponseHeader" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testAcceptTurtle" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testConformsContainerRdfResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testConformsContainerRdfResource" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testDeleteRemovesContainmentTriple()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testDeleteRemovesContainmentTriple" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testNullRelativeUriPost()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testNullRelativeUriPost" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testPostContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostContainer" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testPostJsonLd()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostJsonLd" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testPostResponseStatusAndLocation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostResponseStatusAndLocation" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRelativeUriResolutionPost(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRelativeUriResolutionPost" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRequestedInteractionModelCreateNotAllowed(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRequestedInteractionModelCreateNotAllowed" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonContainerTest.testRequestedInteractionModelHeaders(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRequestedInteractionModelHeaders" class="org.w3.ldp.testsuite.test.CommonContainerTest"/>
        <method signature="CommonResourceTest.testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testAcceptPatchHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testAcceptPatchHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testConditionFailedStatusCode" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testConditionFailedStatusCode" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testETagHeadersGet" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testETagHeadersGet" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testETagHeadersHead" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testETagHeadersHead" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testGetResource" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResponseHeaders" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testHead()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testHead" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testHead()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testHead" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testIsHttp11Manual" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testIsHttp11Manual" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testLdpLinkHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testOptions" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testOptions" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testOptionsAllowHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testOptionsAllowHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPreconditionRequiredStatusCode" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPreconditionRequiredStatusCode" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutBadETag" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPutBadETag" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="IndirectContainerTest.testContainerHasInsertedContentRelation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContainerHasInsertedContentRelation" class="org.w3.ldp.testsuite.test.IndirectContainerTest"/>
        <method signature="IndirectContainerTest.testContainerSupportsHttpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContainerSupportsHttpLinkHeader" class="org.w3.ldp.testsuite.test.IndirectContainerTest"/>
        <method signature="IndirectContainerTest.testPostResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostResource" class="org.w3.ldp.testsuite.test.IndirectContainerTest"/>
        <method signature="NonRDFSourceTest.testDeleteNonRDFSourceDeletesAssociatedResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testDeleteNonRDFSourceDeletesAssociatedResource" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="NonRDFSourceTest.testOptionsHasSameLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testOptionsHasSameLinkHeader" class="org.w3.ldp.testsuite.test.NonRDFSourceTest"/>
        <method signature="RdfSourceTest.testConformsRdfSourceLdpResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testConformsRdfSourceLdpResource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testGetResourceAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResourceAcceptTurtle" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testJsonLdRepresentation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testJsonLdRepresentation" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPublishConstraintsReadOnlyProp(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPublishConstraintsReadOnlyProp" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPublishConstraintsUnknownProp()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPublishConstraintsUnknownProp" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPutPropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutPropertiesNotPersisted" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPutReadOnlyProperties4xxStatus(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutReadOnlyProperties4xxStatus" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPutReplacesResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutReplacesResource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPutSimpleUpdate()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutSimpleUpdate" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testRelativeUriResolutionPut(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRelativeUriResolutionPut" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictClientInference" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testRestrictClientInference" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testOptionsAllowHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResponseHeaders" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testGetResponseHeaders" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPublishConstraintsReadOnlyProp(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPublishConstraintsReadOnlyProp" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testConformsRdfSourceLdpResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testConformsRdfSourceLdpResource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPutSimpleUpdate()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutSimpleUpdate" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutBadETag" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testRelativeUriResolutionPut(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testRelativeUriResolutionPut" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testOptions" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testPutPropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutPropertiesNotPersisted" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testHead()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testHead" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testIsHttp11Manual" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testPublishConstraintsUnknownProp()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPublishConstraintsUnknownProp" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testLdpLinkHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testConditionFailedStatusCode" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testLdpLinkHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testGetResourceAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResourceAcceptTurtle" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="CommonResourceTest.testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testETagHeadersHead" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testAcceptPatchHeader" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPreconditionRequiredStatusCode" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="CommonResourceTest.testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testETagHeadersGet" class="org.w3.ldp.testsuite.test.CommonResourceTest"/>
        <method signature="RdfSourceTest.testPutReadOnlyProperties4xxStatus(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutReadOnlyProperties4xxStatus" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testJsonLdRepresentation()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testJsonLdRepresentation" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
        <method signature="RdfSourceTest.testPutReplacesResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutReplacesResource" class="org.w3.ldp.testsuite.test.RdfSourceTest"/>
      </group> <!-- MUST -->
    </groups>
    <test name="W3C Linked Data Platform Tests" duration-ms="1887" started-at="2019-01-01T20:19:17Z" finished-at="2019-01-01T20:19:19Z">
      <class name="org.w3.ldp.testsuite.test.IndirectContainerTest">
        <test-method status="PASS" signature="determineOptions()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="determineOptions" is-config="true" duration-ms="25" started-at="2019-01-01T12:19:17Z" finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- determineOptions -->
        <test-method status="PASS" signature="hasIndirectContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="hasIndirectContainer" is-config="true" duration-ms="39" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasIndirectContainer -->
        <test-method status="PASS" signature="testAcceptPostResponseHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testAcceptPostResponseHeader" duration-ms="18" started-at="2019-01-01T12:19:18Z" description="LDP servers that support POST MUST include an Accept-Post response header on HTTP OPTIONS responses, listing post document media type(s) supported by the server." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptPostResponseHeader -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptPostResponseHeader status=SUCCESS method=CommonContainerTest.testAcceptPostResponseHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testAcceptTurtle" duration-ms="42" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST accept a request entity body with a request header of Content-Type with value of text/turtle [turtle]." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptTurtle -->
        <test-method status="PASS" signature="testContentTypeHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContentTypeHeader" duration-ms="15" started-at="2019-01-01T12:19:18Z" description="LDP servers SHOULD use the Content-Type request header to determine the representation format when the request has an entity body." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentTypeHeader -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConformsContainerRdfResource status=SKIP method=CommonContainerTest.testConformsContainerRdfResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptTurtle status=SUCCESS method=CommonContainerTest.testAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testConformsContainerRdfResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testConformsContainerRdfResource" duration-ms="0" started-at="2019-01-01T12:19:18Z" description="Each Linked Data Platform Container MUST also be a conforming Linked Data Platform RDF Source." finished-at="2019-01-01T12:19:18Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Covered indirectly by the MUST tests defined in RdfSourceTest class]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Covered indirectly by the MUST tests defined in RdfSourceTest class
	at org.w3.ldp.testsuite.test.CommonContainerTest.testConformsContainerRdfResource(CommonContainerTest.java:889)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConformsContainerRdfResource -->
        <test-method status="PASS" signature="testCreateWithoutConstraints()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testCreateWithoutConstraints" duration-ms="60" started-at="2019-01-01T12:19:18Z" description="LDP servers SHOULD allow clients to create new resources without requiring detailed knowledge of application-specific constraints. This is a consequence of the requirement to enable simple creation and modification of LDPRs. LDP servers expose these application-specific constraints as described in section 4.2.1 General." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateWithoutConstraints -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContentTypeHeader status=SUCCESS method=CommonContainerTest.testContentTypeHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testDeleteRemovesContainmentTriple()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testDeleteRemovesContainmentTriple" duration-ms="44" started-at="2019-01-01T12:19:18Z" description="When an LDPR identified by the object of a containment triple is deleted, the LDPC server MUST also remove the LDPR from the containing LDPC by removing the corresponding containment triple." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteRemovesContainmentTriple -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCreateWithoutConstraints status=SUCCESS method=CommonContainerTest.testCreateWithoutConstraints()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testNoRdfBagSeqOrList()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testNoRdfBagSeqOrList" duration-ms="15" started-at="2019-01-01T12:19:18Z" description="LDPC representations SHOULD NOT use RDF container types rdf:Bag, rdf:Seq or rdf:List." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoRdfBagSeqOrList -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteRemovesContainmentTriple status=SUCCESS method=CommonContainerTest.testDeleteRemovesContainmentTriple()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNoRdfBagSeqOrList status=SUCCESS method=CommonContainerTest.testNoRdfBagSeqOrList()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testNullRelativeUriPost()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testNullRelativeUriPost" duration-ms="54" started-at="2019-01-01T12:19:18Z" description="In RDF representations, LDP servers MUST interpret the null relative URI for the subject of triples in the LDPR representation in the request entity body as referring to the entity in the request body. Commonly, that entity is the model for the “to be created” LDPR, so triples whose subject is the null relative URI will usually result in triples in the created resource whose subject is the created resource." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullRelativeUriPost -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNullRelativeUriPost status=SUCCESS method=CommonContainerTest.testNullRelativeUriPost()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPostContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostContainer" duration-ms="48" started-at="2019-01-01T12:19:18Z" description="When a successful HTTP POST request to an LDPC results in the creation of an LDPR, a containment triple MUST be added to the state of LDPC." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostContainer -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPatchMethod status=SUCCESS method=CommonContainerTest.testPatchMethod()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPatchMethod()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPatchMethod" duration-ms="0" started-at="2019-01-01T12:19:18Z" description="LDP servers are RECOMMENDED to support HTTP PATCH as the preferred method for updating an LDPC&#039;s empty-container triples. " finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchMethod -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostContainer status=SUCCESS method=CommonContainerTest.testPostContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPostJsonLd()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostJsonLd" duration-ms="137" started-at="2019-01-01T12:19:18Z" description="LDP servers SHOULD accept a request entity body with a request header of Content-Type with value of application/ld+json [JSON-LD]." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostJsonLd -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostJsonLd status=SUCCESS method=CommonContainerTest.testPostJsonLd()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPostNoSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostNoSlug" duration-ms="28" started-at="2019-01-01T12:19:18Z" description="LDP servers SHOULD assign the URI for the resource to be created using server application specific rules in the absence of a client hint." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostNoSlug -->
        <test-method status="PASS" signature="testPostResponseStatusAndLocation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostResponseStatusAndLocation" duration-ms="43" started-at="2019-01-01T12:19:18Z" description="If the resource was created successfully, LDP servers MUST respond with status code 201 (Created) and the Location header set to the new resource’s URL. Clients shall not expect any representation in the response entity body on a 201 (Created) response." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResponseStatusAndLocation -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostNoSlug status=SUCCESS method=CommonContainerTest.testPostNoSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResponseStatusAndLocation status=SUCCESS method=CommonContainerTest.testPostResponseStatusAndLocation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="FAIL" signature="testPreferContainmentTriples()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPreferContainmentTriples" duration-ms="27" started-at="2019-01-01T12:19:18Z" description="LDP servers SHOULD respect all of a client&#039;s LDP-defined hints, for example which subsets of LDP-defined state the client is interested in processing, to influence the set of triples returned in representations of an LDPC, particularly for large LDPCs. See also [LDP-PAGING]." finished-at="2019-01-01T12:19:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Container has containment triples when minimal container was requested expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Container has containment triples when minimal container was requested expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.w3.ldp.testsuite.test.CommonContainerTest.testPreferContainmentTriples(CommonContainerTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreferContainmentTriples -->
        <test-method status="PASS" signature="testPutToCreate()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutToCreate" duration-ms="27" started-at="2019-01-01T12:19:18Z" description="LDP servers MAY choose to allow the creation of new resources using HTTP PUT." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutToCreate -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPreferContainmentTriples status=FAILURE method=CommonContainerTest.testPreferContainmentTriples()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="FAIL" signature="testRdfTypeLdpContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRdfTypeLdpContainer" duration-ms="13" started-at="2019-01-01T12:19:18Z" description="The representation of a LDPC MAY have an rdf:type of ldp:Container for Linked Data Platform Container. Non-normative note: LDPCs might have additional types, like any LDP-RS. " finished-at="2019-01-01T12:19:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[LDPC does not have an rdf:type of ldp:Container expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: LDPC does not have an rdf:type of ldp:Container expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.w3.ldp.testsuite.test.CommonContainerTest.testRdfTypeLdpContainer(CommonContainerTest.java:793)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRdfTypeLdpContainer -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutToCreate status=SUCCESS method=CommonContainerTest.testPutToCreate()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRdfTypeLdpContainer status=FAILURE method=CommonContainerTest.testRdfTypeLdpContainer()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testRejectPutModifyingContainmentTriples()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRejectPutModifyingContainmentTriples" duration-ms="28" started-at="2019-01-01T12:19:18Z" description="LDP servers SHOULD NOT allow HTTP PUT to update an LDPC’s containment triples; if the server receives such a request, it SHOULD respond with a 409 (Conflict) status code." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRejectPutModifyingContainmentTriples -->
        <test-method status="PASS" signature="testRelativeUriResolutionPost(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRelativeUriResolutionPost" duration-ms="43" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST assign the default base-URI for [RFC3987] relative-URI resolution to be the HTTP Request-URI when the resource already exists, and to the URI of the created resource when the request results in the creation of a new resource." finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelativeUriResolutionPost -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRejectPutModifyingContainmentTriples status=SUCCESS method=CommonContainerTest.testRejectPutModifyingContainmentTriples()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRelativeUriResolutionPost status=SUCCESS method=CommonContainerTest.testRelativeUriResolutionPost(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRequestedInteractionModelHeaders status=SKIP method=CommonContainerTest.testRequestedInteractionModelHeaders(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRequestedInteractionModelCreateNotAllowed status=SKIP method=CommonContainerTest.testRequestedInteractionModelCreateNotAllowed(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testRequestedInteractionModelCreateNotAllowed(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRequestedInteractionModelCreateNotAllowed" duration-ms="0" started-at="2019-01-01T12:19:18Z" description="LDP servers that successfully create a resource from a RDF representation in the request entity body MUST honor the client&#039;s requested interaction model(s). The created resource can be thought of as an RDF named graph [rdf11-concepts]. If any model cannot be honored, the server MUST fail the request." finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[containerAsResource is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: containerAsResource is null
	at org.w3.ldp.testsuite.test.CommonContainerTest.testRequestedInteractionModelCreateNotAllowed(CommonContainerTest.java:315)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestedInteractionModelCreateNotAllowed -->
        <test-method status="SKIP" signature="testRequestedInteractionModelHeaders(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRequestedInteractionModelHeaders" duration-ms="0" started-at="2019-01-01T12:19:18Z" description="LDP servers that successfully create a resource from a RDF representation in the request entity body MUST honor the client&#039;s requested interaction model(s). The created resource can be thought of as an RDF named graph [rdf11-concepts]. If any model cannot be honored, the server MUST fail the request." finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[containerAsResource is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: containerAsResource is null
	at org.w3.ldp.testsuite.test.CommonContainerTest.testRequestedInteractionModelHeaders(CommonContainerTest.java:351)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestedInteractionModelHeaders -->
        <test-method status="PASS" signature="testRestrictUriReUseNoSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictUriReUseNoSlug" duration-ms="52" started-at="2019-01-01T12:19:18Z" description="LDP servers that allow member creation via POST SHOULD NOT re-use URIs." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestrictUriReUseNoSlug -->
        <test-method status="FAIL" signature="testRestrictUriReUseSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictUriReUseSlug" duration-ms="55" started-at="2019-01-01T12:19:18Z" description="LDP servers that allow member creation via POST SHOULD NOT re-use URIs." finished-at="2019-01-01T12:19:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> doesn't match actual status code <409>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> doesn't match actual status code <409>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at com.jayway.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1575)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at com.jayway.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:163)
	at com.jayway.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.post(ResponseSpecificationImpl.groovy:293)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.post(ResponseSpecificationImpl.groovy)
	at org.w3.ldp.testsuite.test.CommonContainerTest.post(CommonContainerTest.java:934)
	at org.w3.ldp.testsuite.test.CommonContainerTest.testRestrictUriReUse(CommonContainerTest.java:921)
	at org.w3.ldp.testsuite.test.CommonContainerTest.testRestrictUriReUseSlug(CommonContainerTest.java:594)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestrictUriReUseSlug -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestrictUriReUseNoSlug status=SUCCESS method=CommonContainerTest.testRestrictUriReUseNoSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestrictUriReUseSlug status=FAILURE method=CommonContainerTest.testRestrictUriReUseSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testServerHonorsSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testServerHonorsSlug" duration-ms="28" started-at="2019-01-01T12:19:18Z" description="LDP servers MAY allow clients to suggest the URI for a resource created through POST, using the HTTP Slug header as defined in [RFC5023]. LDP adds no new requirements to this usage, so its presence functions as a client hint to the server providing a desired string to be incorporated into the server&#039;s final choice of resource URI." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServerHonorsSlug -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testServerHonorsSlug status=SUCCESS method=CommonContainerTest.testServerHonorsSlug()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testAcceptPatchHeader" duration-ms="11" started-at="2019-01-01T12:19:18Z" description="LDP servers that support PATCH MUST include an Accept-Patch HTTP response header [RFC5789] on HTTP OPTIONS requests, listing patch document media type(s) supported by the server. " finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptPatchHeader -->
        <test-method status="PASS" signature="testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testConditionFailedStatusCode" duration-ms="23" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConditionFailedStatusCode -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptPatchHeader status=SUCCESS method=CommonResourceTest.testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConditionFailedStatusCode status=SUCCESS method=CommonResourceTest.testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testETagHeadersGet" duration-ms="11" started-at="2019-01-01T12:19:18Z" description="LDP server responses MUST use entity tags (either weak or strong ones) as response ETag header values." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testETagHeadersGet -->
        <test-method status="PASS" signature="testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testETagHeadersHead" duration-ms="11" started-at="2019-01-01T12:19:18Z" description="LDP server responses MUST use entity tags (either weak or strong ones) as response ETag header values." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testETagHeadersHead -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testETagHeadersGet status=SUCCESS method=CommonResourceTest.testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testETagHeadersHead status=SUCCESS method=CommonResourceTest.testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResponseHeaders" duration-ms="11" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST support the HTTP response headers defined in section 4.2.8 HTTP OPTIONS. " finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResponseHeaders -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResponseHeaders status=SUCCESS method=CommonResourceTest.testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testHead()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testHead" duration-ms="10" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST support the HTTP HEAD method. " finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHead -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHead status=SUCCESS method=CommonResourceTest.testHead()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testIsHttp11Manual" duration-ms="1" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST at least be HTTP/1.1 conformant servers [HTTP11]." finished-at="2019-01-01T12:19:18Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.CommonResourceTest.testIsHttp11Manual(CommonResourceTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsHttp11Manual -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testIsHttp11Manual status=SKIP method=CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testLdpLinkHeader" duration-ms="11" started-at="2019-01-01T12:19:18Z" description="LDP servers exposing LDPRs MUST advertise their LDP support by exposing a HTTP Link header with a target URI of http://www.w3.org/ns/ldp#Resource, and a link relation type of type (that is, rel=&#039;type&#039;) in all responses to requests made to the LDPR&#039;s HTTP Request-URI." finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLdpLinkHeader -->
        <test-method status="PASS" signature="testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testOptions" duration-ms="10" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST support the HTTP OPTIONS method. " finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptions -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLdpLinkHeader status=SUCCESS method=CommonResourceTest.testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testOptionsAllowHeader" duration-ms="10" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST indicate their support for HTTP Methods by responding to a HTTP OPTIONS request on the LDPR’s URL with the HTTP Method tokens in the HTTP response header Allow. " finished-at="2019-01-01T12:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionsAllowHeader -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptions status=SUCCESS method=CommonResourceTest.testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPreconditionRequiredStatusCode" duration-ms="52" started-at="2019-01-01T12:19:18Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Server does not require If-Match header.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Server does not require If-Match header.
	at org.w3.ldp.testsuite.test.CommonResourceTest.testPreconditionRequiredStatusCode(CommonResourceTest.java:369)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreconditionRequiredStatusCode -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:18Z" finished-at="2019-01-01T12:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptionsAllowHeader status=SUCCESS method=CommonResourceTest.testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPreconditionRequiredStatusCode status=SKIP method=CommonResourceTest.testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutBadETag" duration-ms="21" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutBadETag -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutBadETag status=SUCCESS method=CommonResourceTest.testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="FAIL" signature="testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutRequiresIfMatch" duration-ms="24" started-at="2019-01-01T12:19:19Z" description="LDP clients SHOULD use the HTTP If-Match header and HTTP ETags to ensure it isn’t modifying a resource that has changed since the client last retrieved its representation. LDP servers SHOULD require the HTTP If-Match header and HTTP ETags to detect collisions." finished-at="2019-01-01T12:19:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code not between 200 and 209 doesn't match actual status code <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code not between 200 and 209 doesn't match actual status code <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at com.jayway.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1575)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at com.jayway.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:167)
	at com.jayway.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.put(ResponseSpecificationImpl.groovy:297)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.put(ResponseSpecificationImpl.groovy)
	at org.w3.ldp.testsuite.test.CommonResourceTest.testPutRequiresIfMatch(CommonResourceTest.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutRequiresIfMatch -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutRequiresIfMatch status=FAILURE method=CommonResourceTest.testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testContainerHasInsertedContentRelation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContainerHasInsertedContentRelation" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="LDP Indirect Containers MUST contain exactly one triple whose subject is the LDPC URI, whose predicate is ldp:insertedContentRelation, and whose object ICR describes how the member-derived-URI in the container&#039;s membership triples is chosen." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainerHasInsertedContentRelation -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContainerHasInsertedContentRelation status=SUCCESS method=IndirectContainerTest.testContainerHasInsertedContentRelation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testContainerSupportsHttpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContainerSupportsHttpLinkHeader" duration-ms="11" started-at="2019-01-01T12:19:19Z" description="LDP servers exposing LDPCs MUST advertise their LDP support by exposing a HTTP Link header with a target URI matching the type of container (see below) the server supports, and a link relation type of type (that is, rel=&#039;type&#039;) in all responses to requests made to the LDPC&#039;s HTTP Request-URI." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainerSupportsHttpLinkHeader -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContainerSupportsHttpLinkHeader status=SUCCESS method=IndirectContainerTest.testContainerSupportsHttpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testConformsRdfSourceLdpResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testConformsRdfSourceLdpResource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="Each LDP RDF Source MUST also be a conforming LDP Resource as defined in section 4.2 Resource, along with the restrictions in this section." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Covered indirectly by the MUST tests defined in CommonResourceTest class]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Covered indirectly by the MUST tests defined in CommonResourceTest class
	at org.w3.ldp.testsuite.test.RdfSourceTest.testConformsRdfSourceLdpResource(RdfSourceTest.java:477)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConformsRdfSourceLdpResource -->
        <test-method status="SKIP" signature="testPostResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPostResource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDPCs whose ldp:insertedContentRelation triple has an object other than ldp:MemberSubject and that create new resources MUST add a triple to the container whose subject is the container&#039;s URI, whose predicate is ldp:contains, and whose object is the newly created resource&#039;s URI (which will be different from the member-derived URI in this case). This ldp:contains triple can be the only link from the container to the newly created resource in certain cases." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[The indirectContainer's ldp:insertedContentRelation triple has ldp:MemberSubject as the object.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: The indirectContainer's ldp:insertedContentRelation triple has ldp:MemberSubject as the object.
	at org.w3.ldp.testsuite.test.IndirectContainerTest.testPostResource(IndirectContainerTest.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResource status=SKIP method=IndirectContainerTest.testPostResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4xxErrorHasResponseBody status=SKIP method=RdfSourceTest.test4xxErrorHasResponseBody(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="test4xxErrorHasResponseBody(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="test4xxErrorHasResponseBody" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers SHOULD provide a corresponding response body containing information about which properties could not be persisted. The format of the 4xx response body is not constrained by LDP." finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.
	at org.w3.ldp.testsuite.test.RdfSourceTest.test4xxErrorHasResponseBody(RdfSourceTest.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4xxErrorHasResponseBody -->
        <test-method status="FAIL" signature="testContainsRdfType()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testContainsRdfType" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="LDP-RSs representations SHOULD have at least one rdf:type set explicitly. This makes the representations much more useful to client applications that don’t support inferencing." finished-at="2019-01-01T12:19:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[LDP-RS representation has no explicit rdf:type expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: LDP-RS representation has no explicit rdf:type expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testContainsRdfType(RdfSourceTest.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsRdfType -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConformsRdfSourceLdpResource status=SKIP method=RdfSourceTest.testConformsRdfSourceLdpResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResource" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST provide an RDF representation for LDP-RSs. The HTTP Request-URI of the LDP-RS is typically the subject of most triples in the response." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContainsRdfType status=FAILURE method=RdfSourceTest.testContainsRdfType()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResourceAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResourceAcceptTurtle" duration-ms="25" started-at="2019-01-01T12:19:19Z" description="LDP servers must respond with a Turtle representation of the requested LDP-RS when the request includes an Accept header specifying text/turtle, unless HTTP content negotiation requires a different outcome [turtle]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResourceAcceptTurtle -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResource status=SUCCESS method=RdfSourceTest.testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResourceAsTurtleNoAccept()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testGetResourceAsTurtleNoAccept" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="LDP servers should respond with a text/turtle representation of the requested LDP-RS whenever the Accept request header is absent [turtle]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResourceAsTurtleNoAccept -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResourceAcceptTurtle status=SUCCESS method=RdfSourceTest.testGetResourceAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResourceAsTurtleNoAccept status=SUCCESS method=RdfSourceTest.testGetResourceAsTurtleNoAccept()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testJsonLdRepresentation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testJsonLdRepresentation" duration-ms="76" started-at="2019-01-01T12:19:19Z" description=" LDP servers must respond with a application/ld+json representation of the requested LDP-RS when the request includes an Accept header, unless content negotiation or Turtle support requires a different outcome [JSON-LD]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonLdRepresentation -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testJsonLdRepresentation status=SUCCESS method=RdfSourceTest.testJsonLdRepresentation()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPublishConstraintsReadOnlyProp status=SKIP method=RdfSourceTest.testPublishConstraintsReadOnlyProp(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPublishConstraintsUnknownProp()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPublishConstraintsUnknownProp" duration-ms="27" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST publish any constraints on LDP clients’ ability to create or update LDPRs, by adding a Link header with rel=&#039;http://www.w3.org/ns/ldp#constrainedBy&#039; [RFC5988] to all responses to requests which fail due to violation of those constraints." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because PUT request was successful.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because PUT request was successful.
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxStatus(RdfSourceTest.java:532)
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxConstrainedBy(RdfSourceTest.java:489)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPublishConstraintsUnknownProp(RdfSourceTest.java:379)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPublishConstraintsUnknownProp -->
        <test-method status="SKIP" signature="testPublishConstraintsReadOnlyProp(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPublishConstraintsReadOnlyProp" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST publish any constraints on LDP clients’ ability to create or update LDPRs, by adding a Link header with rel=&#039;http://www.w3.org/ns/ldp#constrainedBy&#039; [RFC5988] to all responses to requests which fail due to violation of those constraints." finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPublishConstraintsReadOnlyProp(RdfSourceTest.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPublishConstraintsReadOnlyProp -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPublishConstraintsUnknownProp status=SKIP method=RdfSourceTest.testPublishConstraintsUnknownProp()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPutPropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutPropertiesNotPersisted" duration-ms="39" started-at="2019-01-01T12:19:19Z" description="If an otherwise valid HTTP PUT request is received that contains properties the server chooses not to persist, e.g. unknown content, LDP servers MUST respond with an appropriate 4xx range status code [HTTP11]." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because PUT request was successful.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because PUT request was successful.
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxStatus(RdfSourceTest.java:532)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPutPropertiesNotPersisted(RdfSourceTest.java:444)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutPropertiesNotPersisted -->
        <test-method status="SKIP" signature="testPutReplacesResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutReplacesResource" duration-ms="1" started-at="2019-01-01T12:19:19Z" description="If a HTTP PUT is accepted on an existing resource, LDP servers MUST replace the entire persistent state of the identified resource with the entity representation in the body of the request." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because there are restrictions on PUT content for this resource. The requirement needs to be tested manually.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because there are restrictions on PUT content for this resource. The requirement needs to be tested manually.
	at org.w3.ldp.testsuite.test.RdfSourceTest.putReplaceResource(RdfSourceTest.java:572)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPutReplacesResource(RdfSourceTest.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutReplacesResource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutReadOnlyProperties4xxStatus status=SKIP method=RdfSourceTest.testPutReadOnlyProperties4xxStatus(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutPropertiesNotPersisted status=SKIP method=RdfSourceTest.testPutPropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPutReadOnlyProperties4xxStatus(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutReadOnlyProperties4xxStatus" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="If an otherwise valid HTTP PUT request is received that attempts to change properties the server does not allow clients to modify, LDP servers MUST respond with a 4xx range status code (typically 409 Conflict)" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPutReadOnlyProperties4xxStatus(RdfSourceTest.java:400)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutReadOnlyProperties4xxStatus -->
        <test-method status="SKIP" signature="testPutSimpleUpdate()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testPutSimpleUpdate" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers SHOULD allow clients to update resources without requiring detailed knowledge of server-specific constraints. This is a consequence of the requirement to enable simple creation and modification of LDPRs." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because there are restrictions on PUT content for this resource. The requirement needs to be tested manually.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because there are restrictions on PUT content for this resource. The requirement needs to be tested manually.
	at org.w3.ldp.testsuite.test.RdfSourceTest.putReplaceResource(RdfSourceTest.java:572)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPutSimpleUpdate(RdfSourceTest.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutSimpleUpdate -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testReUseVocabularies status=SKIP method=RdfSourceTest.testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testReUseVocabularies" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP-RSs SHOULD reuse existing vocabularies instead of creating their own duplicate vocabulary terms. In addition to this general rule, some specific cases are covered by other conformance rules." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testReUseVocabularies(RdfSourceTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReUseVocabularies -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutReplacesResource status=SKIP method=RdfSourceTest.testPutReplacesResource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutSimpleUpdate status=SKIP method=RdfSourceTest.testPutSimpleUpdate()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testRelativeUriResolutionPut(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRelativeUriResolutionPut" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST assign the default base-URI for [RFC3987] relative-URI resolution to be the HTTP Request-URI when the resource already exists, and to the URI of the created resource when the request results in the creation of a new resource." finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because there are restrictions on PUT content for this resource. The requirement needs to be tested manually.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because there are restrictions on PUT content for this resource. The requirement needs to be tested manually.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testRelativeUriResolutionPut(RdfSourceTest.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelativeUriResolutionPut -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRelativeUriResolutionPut status=SKIP method=RdfSourceTest.testRelativeUriResolutionPut(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testResponsePropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testResponsePropertiesNotPersisted" duration-ms="29" started-at="2019-01-01T12:19:19Z" description="LDP servers SHOULD provide a corresponding response body containing information about which properties could not be persisted. The format of the 4xx response body is not constrained by LDP. LDP servers expose these application-specific constraints as described in section 4.2.1 General." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because PUT request was successful.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because PUT request was successful.
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxStatus(RdfSourceTest.java:532)
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxResponseBody(RdfSourceTest.java:542)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testResponsePropertiesNotPersisted(RdfSourceTest.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponsePropertiesNotPersisted -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestrictClientInference status=SKIP method=RdfSourceTest.testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictClientInference" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST NOT require LDP clients to implement inferencing in order to recognize the subset of content defined by LDP. Other specifications built on top of LDP may require clients to implement inferencing [rdf11-concepts]. The practical implication is that all content defined by LDP must be explicitly represented, unless noted otherwise within this document." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testRestrictClientInference(RdfSourceTest.java:276)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestrictClientInference -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testResponsePropertiesNotPersisted status=SKIP method=RdfSourceTest.testResponsePropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="FAIL" signature="testTypeRdfSource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testTypeRdfSource" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="The representation of a LDP-RS MAY have an rdf:type of ldp:RDFSource for Linked Data Platform RDF Source." finished-at="2019-01-01T12:19:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[LDP-RS representation does not have rdf:type ldp:RDFSource expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: LDP-RS representation does not have rdf:type ldp:RDFSource expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testTypeRdfSource(RdfSourceTest.java:208)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeRdfSource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeRdfSource status=FAILURE method=RdfSourceTest.testTypeRdfSource()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testUseStandardVocabularies" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP-RSs predicates SHOULD use standard vocabularies such as Dublin Core [DC-TERMS], RDF [rdf11-concepts] and RDF Schema [rdf-schema], whenever possible." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testUseStandardVocabularies(RdfSourceTest.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseStandardVocabularies -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUseStandardVocabularies status=SKIP method=RdfSourceTest.testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testRestrictPutReUseUri()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="testRestrictPutReUseUri" duration-ms="34" started-at="2019-01-01T12:19:19Z" description="LDP servers that allow LDPR creation via PUT SHOULD NOT re-use URIs. For RDF representations (LDP-RSs),the created resource can be thought of as an RDF named graph [rdf11-concepts]." depends-on-methods="org.w3.ldp.testsuite.test.CommonContainerTest.testPutToCreate" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestrictPutReUseUri -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestrictPutReUseUri status=SUCCESS method=CommonContainerTest.testRestrictPutReUseUri()[pri:0, instance:org.w3.ldp.testsuite.test.IndirectContainerTest@626ddb07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
      </class> <!-- org.w3.ldp.testsuite.test.IndirectContainerTest -->
      <class name="org.w3.ldp.testsuite.test.NonRDFSourceTest">
        <test-method status="SKIP" signature="determineOptions()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="determineOptions" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because test resource is null.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because test resource is null.
	at org.w3.ldp.testsuite.test.NonRDFSourceTest.getResourceUri(NonRDFSourceTest.java:100)
	at org.w3.ldp.testsuite.test.CommonResourceTest.determineOptions(CommonResourceTest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- determineOptions -->
        <test-method status="SKIP" signature="testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testAcceptPatchHeader" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers that support PATCH MUST include an Accept-Patch HTTP response header [RFC5789] on HTTP OPTIONS requests, listing patch document media type(s) supported by the server. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptPatchHeader -->
        <test-method status="SKIP" signature="testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testConditionFailedStatusCode" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConditionFailedStatusCode -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConditionFailedStatusCode status=SKIP method=CommonResourceTest.testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testETagHeadersGet" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP server responses MUST use entity tags (either weak or strong ones) as response ETag header values." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testETagHeadersGet -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptPatchHeader status=SKIP method=CommonResourceTest.testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testETagHeadersGet status=SKIP method=CommonResourceTest.testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testETagHeadersHead" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP server responses MUST use entity tags (either weak or strong ones) as response ETag header values." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testETagHeadersHead -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testETagHeadersHead status=SKIP method=CommonResourceTest.testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testIsHttp11Manual" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST at least be HTTP/1.1 conformant servers [HTTP11]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsHttp11Manual -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResource status=SKIP method=CommonResourceTest.testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testIsHttp11Manual status=SKIP method=CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHead status=SKIP method=CommonResourceTest.testHead()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testOptions" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP OPTIONS method. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptions -->
        <test-method status="SKIP" signature="testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testGetResource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP GET Method for LDPRs" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResource -->
        <test-method status="SKIP" signature="testHead()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testHead" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP HEAD method. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHead -->
        <test-method status="SKIP" signature="testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testOptionsAllowHeader" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST indicate their support for HTTP Methods by responding to a HTTP OPTIONS request on the LDPR’s URL with the HTTP Method tokens in the HTTP response header Allow. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionsAllowHeader -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptions status=SKIP method=CommonResourceTest.testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPutBadETag" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutBadETag -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutBadETag status=SKIP method=CommonResourceTest.testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPreconditionRequiredStatusCode" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreconditionRequiredStatusCode -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptionsAllowHeader status=SKIP method=CommonResourceTest.testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPreconditionRequiredStatusCode status=SKIP method=CommonResourceTest.testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostNonRDFSource status=SKIP method=NonRDFSourceTest.testPostNonRDFSource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPostResourceAndGetFromContainer()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceAndGetFromContainer" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers may accept an HTTP POST of non-RDF representations (LDP-NRs) for creation of any kind of resource, for example binary resources." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResourceAndGetFromContainer -->
        <test-method status="SKIP" signature="testPostResourceAndCheckAssociatedResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceAndCheckAssociatedResource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="Upon successful creation of an LDP-NR (HTTP status code of 201-Created and URI indicated by Location response header), LDP servers may create an associated LDP-RS to contain data about the newly created LDP-NR. If a LDP server creates this associated LDP-RS it must indicate its location on the HTTP response using the HTTP Link response header with link relation describedby and href to be the URI of the associated LDP-RS resource." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResourceAndCheckAssociatedResource -->
        <test-method status="SKIP" signature="testPostNonRDFSource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostNonRDFSource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers may accept an HTTP POST of non-RDF representations (LDP-NRs) for creation of any kind of resource, for example binary resources." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostNonRDFSource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResourceAndCheckLink status=SKIP method=NonRDFSourceTest.testPostResourceAndCheckLink()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPostResourceAndCheckLink()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceAndCheckLink" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers exposing an LDP Non-RDF Source may advertise this by exposing a HTTP Link header with a target URI of http://www.w3.org/ns/ldp#NonRDFSource, and a link relation type of type (that is, rel=&#039;type&#039;) in responses to requests made to the LDP-NR&#039;s HTTP Request-URI." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResourceAndCheckLink -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResourceAndCheckAssociatedResource status=SKIP method=NonRDFSourceTest.testPostResourceAndCheckAssociatedResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResponseHeaders status=SKIP method=CommonResourceTest.testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResourceGetMetadataAndBinary status=SKIP method=NonRDFSourceTest.testPostResourceGetMetadataAndBinary()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPostResourceGetBinary()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceGetBinary" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers may host a mixture of LDP-RSs and LDP-NRs. For example, it is common for LDP servers to need to host binary or text resources that do not have useful RDF representations." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResourceGetBinary -->
        <test-method status="SKIP" signature="testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testGetResponseHeaders" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP response headers defined in section 4.2.8 HTTP OPTIONS. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResponseHeaders -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResourceGetBinary status=SKIP method=NonRDFSourceTest.testPostResourceGetBinary()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPostResourceGetMetadataAndBinary()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPostResourceGetMetadataAndBinary" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="Each LDP Non-RDF Source must also be a conforming LDP Resource. LDP Non-RDF Sources may not be able to fully express their state using RDF." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostResourceGetMetadataAndBinary -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPostResourceAndGetFromContainer status=SKIP method=NonRDFSourceTest.testPostResourceAndGetFromContainer()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testOptionsHasSameLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testOptionsHasSameLinkHeader" duration-ms="1" started-at="2019-01-01T12:19:19Z" description="When responding to requests whose request-URI is a LDP-NR with anassociated LDP-RS, a LDPC server must provide the same HTTP Link responseheader as is required in the create response" depends-on-methods="org.w3.ldp.testsuite.test.NonRDFSourceTest.testPostResourceAndCheckAssociatedResource" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionsHasSameLinkHeader -->
        <test-method status="SKIP" signature="testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testPutRequiresIfMatch" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP clients SHOULD use the HTTP If-Match header and HTTP ETags to ensure it isn’t modifying a resource that has changed since the client last retrieved its representation. LDP servers SHOULD require the HTTP If-Match header and HTTP ETags to detect collisions." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutRequiresIfMatch -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutRequiresIfMatch status=SKIP method=CommonResourceTest.testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testLdpLinkHeader" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers exposing LDPRs MUST advertise their LDP support by exposing a HTTP Link header with a target URI of http://www.w3.org/ns/ldp#Resource, and a link relation type of type (that is, rel=&#039;type&#039;) in all responses to requests made to the LDPR&#039;s HTTP Request-URI." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLdpLinkHeader -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLdpLinkHeader status=SKIP method=CommonResourceTest.testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testDeleteNonRDFSourceDeletesAssociatedResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="testDeleteNonRDFSourceDeletesAssociatedResource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="When a contained LDPR is deleted, and the LDPC server created anassociated LDP-RS (see the LDPC POST section), the LDPC server must alsodelete the associated LDP-RS it created." depends-on-methods="org.w3.ldp.testsuite.test.NonRDFSourceTest.testPostResourceAndCheckAssociatedResource" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonRDFSourceDeletesAssociatedResource -->
      </class> <!-- org.w3.ldp.testsuite.test.NonRDFSourceTest -->
      <class name="org.w3.ldp.testsuite.test.MemberResourceTest">
        <test-method status="PASS" signature="commonSetup(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="commonSetup" is-config="true" duration-ms="4" started-at="2019-01-01T12:19:16Z" finished-at="2019-01-01T12:19:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[report]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonSetup -->
        <test-method status="PASS" signature="createTestResource(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="createTestResource" is-config="true" duration-ms="703" started-at="2019-01-01T12:19:16Z" depends-on-methods="org.w3.ldp.testsuite.test.LdpTest.commonSetup" finished-at="2019-01-01T12:19:17Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://127.0.0.1:56908/9040572639a6bda2d2546f0d7036b686]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestResource -->
        <test-method status="PASS" signature="createTestResource(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="createTestResource" is-config="true" duration-ms="333" started-at="2019-01-01T12:19:17Z" depends-on-methods="org.w3.ldp.testsuite.test.NonRDFSourceTest.createTestResource, org.w3.ldp.testsuite.test.LdpTest.commonSetup" finished-at="2019-01-01T12:19:17Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://127.0.0.1:56908/9040572639a6bda2d2546f0d7036b686]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestResource -->
        <test-method status="PASS" signature="determineOptions()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="determineOptions" is-config="true" duration-ms="9" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- determineOptions -->
        <test-method status="SKIP" signature="testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testRestrictClientInference" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST NOT require LDP clients to implement inferencing in order to recognize the subset of content defined by LDP. Other specifications built on top of LDP may require clients to implement inferencing [rdf11-concepts]. The practical implication is that all content defined by LDP must be explicitly represented, unless noted otherwise within this document." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testRestrictClientInference(RdfSourceTest.java:276)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRestrictClientInference -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRestrictClientInference status=SKIP method=RdfSourceTest.testRestrictClientInference()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testOptionsAllowHeader" duration-ms="11" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST indicate their support for HTTP Methods by responding to a HTTP OPTIONS request on the LDPR’s URL with the HTTP Method tokens in the HTTP response header Allow. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionsAllowHeader -->
        <test-method status="PASS" signature="testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResponseHeaders" duration-ms="10" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP response headers defined in section 4.2.8 HTTP OPTIONS. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResponseHeaders -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptionsAllowHeader status=SUCCESS method=CommonResourceTest.testOptionsAllowHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResource" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST provide an RDF representation for LDP-RSs. The HTTP Request-URI of the LDP-RS is typically the subject of most triples in the response." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResponseHeaders status=SUCCESS method=CommonResourceTest.testGetResponseHeaders()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResource status=SUCCESS method=RdfSourceTest.testGetResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConformsRdfSourceLdpResource status=SKIP method=RdfSourceTest.testConformsRdfSourceLdpResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUseStandardVocabularies status=SKIP method=RdfSourceTest.testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testConformsRdfSourceLdpResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testConformsRdfSourceLdpResource" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="Each LDP RDF Source MUST also be a conforming LDP Resource as defined in section 4.2 Resource, along with the restrictions in this section." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Covered indirectly by the MUST tests defined in CommonResourceTest class]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Covered indirectly by the MUST tests defined in CommonResourceTest class
	at org.w3.ldp.testsuite.test.RdfSourceTest.testConformsRdfSourceLdpResource(RdfSourceTest.java:477)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConformsRdfSourceLdpResource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPublishConstraintsReadOnlyProp status=SKIP method=RdfSourceTest.testPublishConstraintsReadOnlyProp(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testUseStandardVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testUseStandardVocabularies" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP-RSs predicates SHOULD use standard vocabularies such as Dublin Core [DC-TERMS], RDF [rdf11-concepts] and RDF Schema [rdf-schema], whenever possible." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testUseStandardVocabularies(RdfSourceTest.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUseStandardVocabularies -->
        <test-method status="SKIP" signature="testPublishConstraintsReadOnlyProp(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPublishConstraintsReadOnlyProp" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST publish any constraints on LDP clients’ ability to create or update LDPRs, by adding a Link header with rel=&#039;http://www.w3.org/ns/ldp#constrainedBy&#039; [RFC5988] to all responses to requests which fail due to violation of those constraints." finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPublishConstraintsReadOnlyProp(RdfSourceTest.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPublishConstraintsReadOnlyProp -->
        <test-method status="PASS" signature="testPutSimpleUpdate()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutSimpleUpdate" duration-ms="36" started-at="2019-01-01T12:19:19Z" description="LDP servers SHOULD allow clients to update resources without requiring detailed knowledge of server-specific constraints. This is a consequence of the requirement to enable simple creation and modification of LDPRs." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutSimpleUpdate -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testReUseVocabularies status=SKIP method=RdfSourceTest.testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testReUseVocabularies()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testReUseVocabularies" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP-RSs SHOULD reuse existing vocabularies instead of creating their own duplicate vocabulary terms. In addition to this general rule, some specific cases are covered by other conformance rules." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testReUseVocabularies(RdfSourceTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReUseVocabularies -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutSimpleUpdate status=SUCCESS method=RdfSourceTest.testPutSimpleUpdate()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutBadETag" duration-ms="19" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutBadETag -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutBadETag status=SUCCESS method=CommonResourceTest.testPutBadETag()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResourceAsTurtleNoAccept()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResourceAsTurtleNoAccept" duration-ms="11" started-at="2019-01-01T12:19:19Z" description="LDP servers should respond with a text/turtle representation of the requested LDP-RS whenever the Accept request header is absent [turtle]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResourceAsTurtleNoAccept -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResourceAsTurtleNoAccept status=SUCCESS method=RdfSourceTest.testGetResourceAsTurtleNoAccept()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testRelativeUriResolutionPut(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testRelativeUriResolutionPut" duration-ms="48" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST assign the default base-URI for [RFC3987] relative-URI resolution to be the HTTP Request-URI when the resource already exists, and to the URI of the created resource when the request results in the creation of a new resource." finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRelativeUriResolutionPut -->
        <test-method status="PASS" signature="testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testOptions" duration-ms="9" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP OPTIONS method. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptions -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRelativeUriResolutionPut status=SUCCESS method=RdfSourceTest.testRelativeUriResolutionPut(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOptions status=SUCCESS method=CommonResourceTest.testOptions()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPutPropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutPropertiesNotPersisted" duration-ms="27" started-at="2019-01-01T12:19:19Z" description="If an otherwise valid HTTP PUT request is received that contains properties the server chooses not to persist, e.g. unknown content, LDP servers MUST respond with an appropriate 4xx range status code [HTTP11]." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because PUT request was successful.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because PUT request was successful.
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxStatus(RdfSourceTest.java:532)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPutPropertiesNotPersisted(RdfSourceTest.java:444)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutPropertiesNotPersisted -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutPropertiesNotPersisted status=SKIP method=RdfSourceTest.testPutPropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="FAIL" signature="testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutRequiresIfMatch" duration-ms="23" started-at="2019-01-01T12:19:19Z" description="LDP clients SHOULD use the HTTP If-Match header and HTTP ETags to ensure it isn’t modifying a resource that has changed since the client last retrieved its representation. LDP servers SHOULD require the HTTP If-Match header and HTTP ETags to detect collisions." finished-at="2019-01-01T12:19:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code not between 200 and 209 doesn't match actual status code <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code not between 200 and 209 doesn't match actual status code <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)
	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at com.jayway.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1575)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)
	at com.jayway.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:167)
	at com.jayway.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)
	at com.jayway.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
	at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.put(ResponseSpecificationImpl.groovy:297)
	at com.jayway.restassured.internal.ResponseSpecificationImpl.put(ResponseSpecificationImpl.groovy)
	at org.w3.ldp.testsuite.test.CommonResourceTest.testPutRequiresIfMatch(CommonResourceTest.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutRequiresIfMatch -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutRequiresIfMatch status=FAILURE method=CommonResourceTest.testPutRequiresIfMatch()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testHead()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testHead" duration-ms="9" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST support the HTTP HEAD method. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHead -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testIsHttp11Manual status=SKIP method=CommonResourceTest.testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHead status=SUCCESS method=CommonResourceTest.testHead()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testIsHttp11Manual()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testIsHttp11Manual" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST at least be HTTP/1.1 conformant servers [HTTP11]." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipNotTestableException">
            <message>
              <![CDATA[This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipNotTestableException: This requirement or recommendation must be tested manually. It is difficult or impossible to write automated tests for and is not part of the testsuite.
	at org.w3.ldp.testsuite.test.CommonResourceTest.testIsHttp11Manual(CommonResourceTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipNotTestableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsHttp11Manual -->
        <test-method status="SKIP" signature="testPublishConstraintsUnknownProp()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPublishConstraintsUnknownProp" duration-ms="24" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST publish any constraints on LDP clients’ ability to create or update LDPRs, by adding a Link header with rel=&#039;http://www.w3.org/ns/ldp#constrainedBy&#039; [RFC5988] to all responses to requests which fail due to violation of those constraints." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because PUT request was successful.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because PUT request was successful.
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxStatus(RdfSourceTest.java:532)
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxConstrainedBy(RdfSourceTest.java:489)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPublishConstraintsUnknownProp(RdfSourceTest.java:379)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPublishConstraintsUnknownProp -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPublishConstraintsUnknownProp status=SKIP method=RdfSourceTest.testPublishConstraintsUnknownProp()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testLdpLinkHeader" duration-ms="10" started-at="2019-01-01T12:19:19Z" description="LDP servers exposing LDPRs MUST advertise their LDP support by exposing a HTTP Link header with a target URI of http://www.w3.org/ns/ldp#Resource, and a link relation type of type (that is, rel=&#039;type&#039;) in all responses to requests made to the LDPR&#039;s HTTP Request-URI." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLdpLinkHeader -->
        <test-method status="PASS" signature="testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testConditionFailedStatusCode" duration-ms="20" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConditionFailedStatusCode -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLdpLinkHeader status=SUCCESS method=CommonResourceTest.testLdpLinkHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConditionFailedStatusCode status=SUCCESS method=CommonResourceTest.testConditionFailedStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testGetResourceAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testGetResourceAcceptTurtle" duration-ms="34" started-at="2019-01-01T12:19:19Z" description="LDP servers must respond with a Turtle representation of the requested LDP-RS when the request includes an Accept header specifying text/turtle, unless HTTP content negotiation requires a different outcome [turtle]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResourceAcceptTurtle -->
        <test-method status="SKIP" signature="test4xxErrorHasResponseBody(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="test4xxErrorHasResponseBody" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="LDP servers SHOULD provide a corresponding response body containing information about which properties could not be persisted. The format of the 4xx response body is not constrained by LDP." finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.
	at org.w3.ldp.testsuite.test.RdfSourceTest.test4xxErrorHasResponseBody(RdfSourceTest.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4xxErrorHasResponseBody -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4xxErrorHasResponseBody status=SKIP method=RdfSourceTest.test4xxErrorHasResponseBody(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="1" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetResourceAcceptTurtle status=SUCCESS method=RdfSourceTest.testGetResourceAcceptTurtle()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testETagHeadersHead" duration-ms="9" started-at="2019-01-01T12:19:19Z" description="LDP server responses MUST use entity tags (either weak or strong ones) as response ETag header values." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testETagHeadersHead -->
        <test-method status="PASS" signature="testContainsRdfType()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testContainsRdfType" duration-ms="13" started-at="2019-01-01T12:19:19Z" description="LDP-RSs representations SHOULD have at least one rdf:type set explicitly. This makes the representations much more useful to client applications that don’t support inferencing." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsRdfType -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testETagHeadersHead status=SUCCESS method=CommonResourceTest.testETagHeadersHead()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContainsRdfType status=SUCCESS method=RdfSourceTest.testContainsRdfType()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testAcceptPatchHeader" duration-ms="10" started-at="2019-01-01T12:19:19Z" description="LDP servers that support PATCH MUST include an Accept-Patch HTTP response header [RFC5789] on HTTP OPTIONS requests, listing patch document media type(s) supported by the server. " finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptPatchHeader -->
        <test-method status="SKIP" signature="testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPreconditionRequiredStatusCode" duration-ms="40" started-at="2019-01-01T12:19:19Z" description="LDP servers MUST respond with status code 412 (Condition Failed) if ETags fail to match when there are no other errors with the request [HTTP11]. LDP servers that require conditional requests MUST respond with status code 428 (Precondition Required) when the absence of a precondition is the only reason for rejecting the request [RFC6585]." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Server does not require If-Match header.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Server does not require If-Match header.
	at org.w3.ldp.testsuite.test.CommonResourceTest.testPreconditionRequiredStatusCode(CommonResourceTest.java:369)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreconditionRequiredStatusCode -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptPatchHeader status=SUCCESS method=CommonResourceTest.testAcceptPatchHeader()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testETagHeadersGet" duration-ms="11" started-at="2019-01-01T12:19:19Z" description="LDP server responses MUST use entity tags (either weak or strong ones) as response ETag header values." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testETagHeadersGet -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPreconditionRequiredStatusCode status=SKIP method=CommonResourceTest.testPreconditionRequiredStatusCode()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutReadOnlyProperties4xxStatus status=SKIP method=RdfSourceTest.testPutReadOnlyProperties4xxStatus(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testPutReadOnlyProperties4xxStatus(java.lang.String)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutReadOnlyProperties4xxStatus" duration-ms="0" started-at="2019-01-01T12:19:19Z" description="If an otherwise valid HTTP PUT request is received that attempts to change properties the server does not allow clients to modify, LDP servers MUST respond with a 4xx range status code (typically 409 Conflict)" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because we have no read-only properties to PUT. Server-managed properties are specified using the "read-only-prop" command-line parameter.
	at org.w3.ldp.testsuite.test.RdfSourceTest.testPutReadOnlyProperties4xxStatus(RdfSourceTest.java:400)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutReadOnlyProperties4xxStatus -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testETagHeadersGet status=SUCCESS method=CommonResourceTest.testETagHeadersGet()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="SKIP" signature="testResponsePropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testResponsePropertiesNotPersisted" duration-ms="25" started-at="2019-01-01T12:19:19Z" description="LDP servers SHOULD provide a corresponding response body containing information about which properties could not be persisted. The format of the 4xx response body is not constrained by LDP. LDP servers expose these application-specific constraints as described in section 4.2.1 General." finished-at="2019-01-01T12:19:19Z">
          <exception class="org.w3.ldp.testsuite.exception.SkipException">
            <message>
              <![CDATA[Skipping test because PUT request was successful.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.w3.ldp.testsuite.exception.SkipException: Skipping test because PUT request was successful.
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxStatus(RdfSourceTest.java:532)
	at org.w3.ldp.testsuite.test.RdfSourceTest.expectPut4xxResponseBody(RdfSourceTest.java:542)
	at org.w3.ldp.testsuite.test.RdfSourceTest.testResponsePropertiesNotPersisted(RdfSourceTest.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.w3.ldp.testsuite.LdpTestSuite.run(LdpTestSuite.java:379)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:415)
	at org.w3.ldp.testsuite.LdpTestSuite.executeTestSuite(LdpTestSuite.java:407)
	at org.w3.ldp.testsuite.RunLdpTestSuite.main(RunLdpTestSuite.java:26)
]]>
            </full-stacktrace>
          </exception> <!-- org.w3.ldp.testsuite.exception.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponsePropertiesNotPersisted -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testResponsePropertiesNotPersisted status=SKIP method=RdfSourceTest.testResponsePropertiesNotPersisted()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testJsonLdRepresentation()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testJsonLdRepresentation" duration-ms="13" started-at="2019-01-01T12:19:19Z" description=" LDP servers must respond with a application/ld+json representation of the requested LDP-RS when the request includes an Accept header, unless content negotiation or Turtle support requires a different outcome [JSON-LD]." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonLdRepresentation -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testJsonLdRepresentation status=SUCCESS method=RdfSourceTest.testJsonLdRepresentation()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testPutReplacesResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testPutReplacesResource" duration-ms="36" started-at="2019-01-01T12:19:19Z" description="If a HTTP PUT is accepted on an existing resource, LDP servers MUST replace the entire persistent state of the identified resource with the entity representation in the body of the request." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutReplacesResource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPutReplacesResource status=SUCCESS method=RdfSourceTest.testPutReplacesResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="testTypeRdfSource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="testTypeRdfSource" duration-ms="12" started-at="2019-01-01T12:19:19Z" description="The representation of a LDP-RS MAY have an rdf:type of ldp:RDFSource for Linked Data Platform RDF Source." finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeRdfSource -->
        <test-method status="PASS" signature="addFailureToHttpLog(org.testng.ITestResult)[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="addFailureToHttpLog" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeRdfSource status=SUCCESS method=RdfSourceTest.testTypeRdfSource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFailureToHttpLog -->
        <test-method status="PASS" signature="deleteTestResource()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="deleteTestResource" is-config="true" duration-ms="21" started-at="2019-01-01T12:19:19Z" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTestResource -->
        <test-method status="PASS" signature="deleteTestResource()[pri:0, instance:org.w3.ldp.testsuite.test.NonRDFSourceTest@541114e8]" name="deleteTestResource" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" depends-on-methods="org.w3.ldp.testsuite.test.MemberResourceTest.deleteTestResource" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTestResource -->
        <test-method status="PASS" signature="commonTearDown()[pri:0, instance:org.w3.ldp.testsuite.test.MemberResourceTest@2586d9a]" name="commonTearDown" is-config="true" duration-ms="0" started-at="2019-01-01T12:19:19Z" depends-on-methods="org.w3.ldp.testsuite.test.NonRDFSourceTest.deleteTestResource, org.w3.ldp.testsuite.test.MemberResourceTest.deleteTestResource" finished-at="2019-01-01T12:19:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commonTearDown -->
      </class> <!-- org.w3.ldp.testsuite.test.MemberResourceTest -->
    </test> <!-- W3C Linked Data Platform Tests -->
  </suite> <!-- LDP Test Suite -->
</testng-results>
